<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ROS入门-ROS的安装及编写简单的节点talker和listener</title>
      <link href="/20190322/introduction-to-rosros-installation-and-writing-simple-node-talker-listener.html"/>
      <url>/20190322/introduction-to-rosros-installation-and-writing-simple-node-talker-listener.html</url>
      
        <content type="html"><![CDATA[<pre><code>废话不多说，我们开始吧！！！我使用的Ubuntu 18.04的系统，所以安装的是最新的ROS版本。以下是ROS版本和Ubuntu系统版本的对照。</code></pre><p><img src="images/sp.png" alt="enter description here"></p><ol><li><p>安装ROS</p></li><li><p>1 配置Ubuntu软件库<br> 先配置Ubuntu存储库以允许 “restricted,” “universe,” and “multiverse.”<br>1.2设置sources.list<br> 先将电脑设置为接受来自packages.ros.org的软件，然后执行命令：</p><p> <code>sudo sh -c &#39;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#39;</code><br>1.3设置密钥<br><code>sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116</code><br>这里如果遇到连接到密钥服务器的问题，可以尝试在前面的命令中替换hkp://pgp.mit.edu:80 或 hkp://keyserver.ubuntu.com:80。<br>②执行安装命令<br>先更新软件包：<figure class="highlight plain"><figcaption><span>apt-get update```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  桌面完整版安装：`sudo apt-get install ros-melodic-desktop-full`</span><br><span class="line">2.编写程序</span><br><span class="line">2.1创建工作环境</span><br><span class="line">创建工作目录：mkdir -p catkin_ws/src</span><br><span class="line">2.2创建第一个软件包</span><br><span class="line">在工作目录下的src文件夹下创建一个名为beginner_tutorials的程序包：</span><br><span class="line">这个程序包依赖于std_msgs、rospy、roscpp.</span><br><span class="line">``` javascript</span><br><span class="line">catkin_create_pkg beginner_tutorials std_msgs rospy roscpp</span><br></pre></td></tr></table></figure></p><p><img src="images/t4.png" alt="enter description here"></p></li><li><p>3编写cpp文件<br>在程序包的src目录创建一个talker.cpp文件以及listener.cpp文件。<br>//talker.cpp</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"std_msgs/String.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//初始化ROS，名称重映射（唯一），必须为base name，不含/</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"talker"</span>); </span><br><span class="line">  <span class="comment">// 为进程的节点创建一个句柄，第一个创建的NodeHandle初始化节点</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line">  <span class="comment">// 告诉主机要在chatter topic上发布一个std_msgs消息</span></span><br><span class="line">  <span class="comment">// 主机会订阅所有chatter topic节点，参数表示发布队列的大小（先进先出）</span></span><br><span class="line">  ros::Publisher chatter_pub = n.advertise&lt;std_msgs::String&gt;(<span class="string">"chatter"</span>, <span class="number">1000</span>);</span><br><span class="line">  ros::<span class="function">Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;  <span class="comment">// 自循环频率</span></span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (ros::ok())</span><br><span class="line">  &#123;</span><br><span class="line">    std_msgs::String msg;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss &lt;&lt; <span class="string">"hello world "</span> &lt;&lt; count;</span><br><span class="line">    msg.data = ss.str();</span><br><span class="line">    <span class="comment">// 输出，用来替代prinf/cout</span></span><br><span class="line">    ROS_INFO(<span class="string">"%s"</span>, msg.data.c_str()); </span><br><span class="line">    chatter_pub.publish(msg);</span><br><span class="line"></span><br><span class="line">    ros::spinOnce();</span><br><span class="line">    <span class="comment">// 休眠，来使发布频率为10Hz</span></span><br><span class="line">    loop_rate.sleep();</span><br><span class="line">    ++count;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>//listener.cpp</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include "ros/ros.h"</span><br><span class="line">#include "std_msgs/String.h"</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line"><span class="keyword">void</span> chatterCallback(<span class="keyword">const</span> std_msgs::<span class="built_in">String</span>::ConstPtr&amp; msg)</span><br><span class="line">&#123;</span><br><span class="line">  ROS_INFO(<span class="string">"I heard: [%s]"</span>, msg-&gt;data.c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">  ros::init(argc, argv, <span class="string">"listener"</span>);</span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line">  <span class="comment">// 告诉master需要订阅chatter topic消息</span></span><br><span class="line">  ros::Subscriber sub = n.subscribe(<span class="string">"chatter"</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line">  ros::spin(); <span class="comment">// 自循环</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.4修改Cmakelist配置<br>在该文件加入各项依赖关系：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">add_executable</span><span class="params">(talker src/talker.cpp)</span></span></span><br><span class="line"><span class="function"><span class="title">target_link_libraries</span><span class="params">(talker $&#123;catkin_LIBRARIES&#125;)</span></span></span><br><span class="line"><span class="function"><span class="title">add_dependencies</span><span class="params">(talker beginner_tutorials_generate_messages_cpp)</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">add_executable</span><span class="params">(listener src/listener.cpp)</span></span></span><br><span class="line"><span class="function"><span class="title">target_link_libraries</span><span class="params">(listener $&#123;catkin_LIBRARIES&#125;)</span></span></span><br><span class="line"><span class="function"><span class="title">add_dependencies</span><span class="params">(listener beginner_tutorials_generate_messages_cpp)</span></span></span><br></pre></td></tr></table></figure><p><img src="images/t8.png" alt="enter description here" title="t8"></p><ol start="3"><li>编译并运行程序<br>依次执行下面的操作：<br>①    <code>Cd ~/catkin_ws</code><br>②    <code>Catkin_make</code>   (编译完成后，生成的可执行文件会放在<br>/home/demons/catkin_ws/devel/lib/beginner_tutorials下)<br>③ 执行<code>roscore</code>     这个命令是你在运行所有ROS程序前首先要运行的命令<br><img src="images/t6.png" alt="enter description here" title="t6"><br>④ 打开一个新的Terminal  cd ~/catkin_ws并执行：<code>source ./devel/setup.bash</code>   （这个地方执行这句话是让ROS能够找到你想要执行的可执行文件，因为第二步执行完成后，生成的可执行文件并不在/home/demons/catkin_ws/src/beginner_tutorials/src/下，这个时候执行第五步就会报错： [rosrun]Couldn’t find executable named talker below            /home/<username>/catkin_ws/src/beginner_tutorials.<br>每次运行程序前先执行一次这句话）<br>⑤  <code>rosrun beginner_tutorials talk</code>   (命令格式是 rosrun [package_name] [node_name])<br><img src="/20190322/introduction-to-rosros-installation-and-writing-simple-node-talker-listener.htm/t7.png" alt="enter description here" title="t7"><br>⑥ 再打开一个terminal cd ~/catkin_ws 再执行<br><code>rosrun beginner_tutorials listener</code><br><img src="/20190322/introduction-to-rosros-installation-and-writing-simple-node-talker-listener.htm/t9.png" alt="enter description here" title="t9"></username></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派打造成全能路由器</title>
      <link href="/20190309/raspberry-pi-becomes-a-versatile-router.html"/>
      <url>/20190309/raspberry-pi-becomes-a-versatile-router.html</url>
      
        <content type="html"><![CDATA[<p>因为迷上了智能路由器，但是好一点的智能路由器价格昂贵，然后本学期在学嵌入式开发，考虑到树莓派功耗低，而且价格便宜（咸鱼买二手的），所以我决定把我自己买的树莓派2B打造为一款全能路由器，话不多说,开始吧。（以下操作如果没明白的，可以加Q1129963779，我和你一起研究）<br>硬件准备：Raspberry Pi 2B或者3B一个，注意，B+用户暂时不能完美使用。USB无线网卡一个（如果是3B就不用购买，因为它自带无限网卡，而2B则没有），这里使用rt3080芯片，如果只做有线路由器使用，可以不用。USB有线网卡一个，这里使用绿联的usb转RJ45网线接口转化器，如果只做无线路由使用，可以不用。SD卡一个，有个128M或256M都够用了Micro USB线及5V，2A电源，网线两根，不用解释</p><h3 id="1-下载lede固件"><a href="#1-下载lede固件" class="headerlink" title="1.    下载lede固件"></a>1.    下载lede固件</h3><p>现在市面上最新的是石像鬼固件，为什么用openwrt的lede固件呢？很简单，因为石像鬼不支持树莓派。<br>进入官网选择lede17.04然后选brcm2708.<br><img src="http://qiniu.unlcedemon.online/FnN3lX-eyNJGQqTwDHGEXyIS0TFw" alt=""><br>进去后有三个选择，从上到下一次适用于1,2,3。因为我用的2B故选择bcn2709.<br><img src="http://qiniu.unlcedemon.online/FnN3lX-eyNJGQqTwDHGEXyIS0TFw" alt=""><br>下载这个<br><img src="http://qiniu.unlcedemon.online/Fmztb5KGCMJswp94sTZIzAPykxJq" alt=""></p><h3 id="2-配置树莓派"><a href="#2-配置树莓派" class="headerlink" title="2. 配置树莓派"></a>2. 配置树莓派</h3><p>下载解压后使用win32diskiamger把镜像写入到sd卡上。</p><p>开机上电后，用网线连接电脑和路由器，输入192.168.1.1进入管理界面。第一次要设置密码。<br><img src="http://qiniu.unlcedemon.online/FiMlfZiPySbkUPWT3sb1e7f8-dMu" alt=""><br>设置密码后，按图中操作悬着interfaces进入点击add new interface<br><img src="http://qiniu.unlcedemon.online/Fg_7Ikkme73D61QZREnXbkaNMB3E" alt=""><br> 如图添加wan口，wan口一定要设置成dhcp模式，因为校园内部是ip池，然后动态给主机分配ip。然后接下来的操作推荐大家在家里完成。使用putty连接路由器<br><img src="http://qiniu.unlcedemon.online/FvQ5Vqt_EYV1WXITXH3sTnBygIL8" alt=""><br>依次输入root和密码进入后，使用opkg intall python 安装python（如果出错请自行百度如何安装python）。然后输入 vi /etc/config/network ，按i进入编辑模式后 把lan口改为eth1，然后按esc输入：wq退出并保存，然后reboot一下就修改成功。<br><img src="http://qiniu.unlcedemon.online/FiDb2j0BNhG8q8rWkw3PTtFkL6Qp" alt=""><br><img src="http://qiniu.unlcedemon.online/FkWYlrVa1cbl0jvHEtCbjPQm_HEB" alt=""><br>然后用浏览器登入路由器管理界面<br>点进System—Software，继续安装软件包。<br><img src="http://qiniu.unlcedemon.online/Fj-W_bwqL9d5TFm2Kc4bW0lYpx2g" alt=""></p><p>点击Update Lists</p><p><img src="http://qiniu.unlcedemon.online/Fg5Gt6KxMjr8aE0nnmqHzDCmwDXl" alt=""><br>成功！<br>按照需求，安装以下软件包：<br>基础使用：openssh-sftp-server git zip usbutils luci-i18n-base-zh-cn luci-i18n-commands-zh-cn<br>无线网卡: kmod-rt2500-usb kmod-rt2800-lib kmod-rt2800-usb kmod-rt2x00-lib kmod-rt2x00-usb kmod-rt73-usb kmod-rtl8187 kmod-rtl8192c-common kmod-rtl8192cu   kmod-rtlwifi-usb kmod-rtlwifi wireless-tools kmod-lib80211 kmod-net-rtl8188eu kmod-net-rtl8192su kmod-mac80211 kmod-ath9k-htc kmod-ath9k-common hostapd-utils hostapd fstools wpa-supplicant-p2p wpa-supplicant wpa-cli wpad-mesh wpad-mini wpad wpan-tools<br>以太网卡: kmod-usb-core kmod-usb-net-asix-ax88179 kmod-usb-net-asix   kmod-usb-net-cdc-eem kmod-usb-net-cdc-ether kmod-usb-net-cdc-mbim kmod-usb-net-cdc-ncm   kmod-usb-net-cdc-subset kmod-usb-net-dm9601-ether kmod-usb-net-hso kmod-usb-net-huawei-cdc-ncm kmod-usb-net-ipheth kmod-usb-net-kalmia kmod-usb-net-kaweth kmod-usb-net-mcs7830 kmod-usb-net-pegasus kmod-usb-net-qmi-wwan kmod-usb-net-rndis<br>kmod-usb-net-sierrawireless kmod-usb-net-smsc95xx kmod-usb-net<br>在SSH之下执行opkg install 指令之下能批量安装。</p><p>在这里换成中文。<br><img src="http://qiniu.unlcedemon.online/FrPwzjVfFHs0qo-dO-EEzxJ5JXjC" alt=""><br>  这时候插入usb转RJ45网口转换器，路由器会自动读取到这个接口，然后点击lan口的修改，选择物理设置，修改为eth1.<br><img src="http://qiniu.unlcedemon.online/FnMPsvzjCvPHQjpMmunWJObRfzBy" alt=""><br>这个时候 有线连接已经ok了，我们的笔记本或者pc网线连接路由器已经能成功上网。<br>接下来配置无线，如果是3B直接找到无线中添加账号密码就可以了，后续操作只对2B、B有效。<br>插入无线网卡后，在网络中添加接口后，路由器会自动读取到radio0，然后给无线分配一个192.168.2.1这个静态ip，然后配置无线就行了，设置完成后，重启一下路由器，就可以收到无线，然后就可以上网了。<br><img src="http://qiniu.unlcedemon.online/Fl8H67Qw4bD73YPLX4OTb1sfgtW_" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 研究 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用阿里云服务器自建DNS服务器</title>
      <link href="/20190309/selfbuilt-dns-server-using-alibaba-cloud.html"/>
      <url>/20190309/selfbuilt-dns-server-using-alibaba-cloud.html</url>
      
        <content type="html"><![CDATA[<p>好久没更新博客了，突然想更新一下我最近的研究。国内DNS污染太严重了，这就导致很多国内外没被墙的网站我们都打不开，有时候就很麻烦，所以最近我研究了一下AdGudrd Home，它是一款全网广告拦截与反跟踪软件，简单来说它就是一个开源的公关DNS服务，借助它，我们就能为自己搭建一个快速、安全的 DNS，同时还能拦截广告，所以我来分享一下我在阿里云服务器上搭建AdGuard Home的心得。</p><h3 id="1、下载安装AdGuard-Home"><a href="#1、下载安装AdGuard-Home" class="headerlink" title="1、下载安装AdGuard Home"></a>1、下载安装AdGuard Home</h3><p>安装步骤可以跟着下面粘贴的命令走，比较简单。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.</span>yum install sudo nano bind9-host</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> wget  https:<span class="comment">//static.adguard.com/adguardhome/release/AdGuardHome_linux_amd64.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>tar xvf AdGuardHome_linux_amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>cd AdGuardHome</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>sudo ./AdGuardHome -s install</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> ./AdGuardHome -s status</span><br></pre></td></tr></table></figure><p>安装完成后可以在浏览器中输入以下内容：<span class="exturl" data-url="aHR0cDovL3h4eHg6MzAwMC8=" title="http://xxxx:3000/">http://xxxx:3000/<i class="fa fa-external-link"></i></span> (xxxx指的是服务器的公网IP地址)就可以载服务器的3000端口(阿里云服务器默认没打开3000端口，需要自己在安全组中配置规则)上访问AdGuard Home Web设置界面。<br><img src="https://i.loli.net/2020/03/07/poAnUhEZqVPfa9y.png" alt="port.png"><br><img src="https://i.loli.net/2020/03/07/hvi9nO7CcAgEPNy.png" alt="result.png"></p><h3 id="2、配置"><a href="#2、配置" class="headerlink" title="2、配置"></a>2、配置</h3><p>浏览器中输入：<span class="exturl" data-url="aHR0cDovL3h4eHg6MzAwMC8=" title="http://xxxx:3000/">http://xxxx:3000/<i class="fa fa-external-link"></i></span> 进入配置界面<br><img src="https://i.loli.net/2020/03/07/AlhkNSP39yMtGWD.png" alt="first.png"><br> 这里的网页管理界面的监听接口和DNS服务器的监听接口设置为所有接口，然后端口你可以改也可以不改，但都需要在安全组中把这些端口打开，80端口需要打开http服务，而53端口最后把udp和tcp服务都打开。<br><img src="https://i.loli.net/2020/03/07/hvi9nO7CcAgEPNy.png" alt="result.png"><br> 接着创建登录名和密码，最后配置您的设备这里就不用管它，默认就行。<br> 接着下一步，登录服务，在「仪表板」上，我们可以看到 DNS 查询次数、被过滤器封锁的网站、查询 DNS 请求的 IP 地址等等信息，我们可以在右下脚设置语言。<br> <img src="https://i.loli.net/2020/03/07/BUxWg2EKGQqcfvV.png" alt="adguard.png"><br> 我们需要做的是在设置里面进行常规设置和dns设置。<br> 在常规设置里:<br> 有「使用 AdGuard 浏览安全网络服务」、「使用 AdGuard 家长监控网络服务」、「强制执行安全搜索」这三个自己看着选，剩下的东西也是看你自己的选择。<br>在dns设置里：<br>速度限制设置为0，上游dns服务器、Bootstrap DNS 服务器需要自己多去网上找找。</p><p>接着设置过滤器，过滤器里可以添加过滤器，可以去网上找找拦截广告的hosts，然后自行添加。<br>以上的东西设置完成后，就可以在我们家里的路由器里添加我们自己的dns服务器了。</p>]]></content>
      
      
      <categories>
          
          <category> DNS,Adguard Home,阿里云 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>阿里云服务器安装Apache服务的坑</title>
      <link href="/20190309/pit-for-alibaba-cloud-server-to-install-apache-service.html"/>
      <url>/20190309/pit-for-alibaba-cloud-server-to-install-apache-service.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-安装Apache服务"><a href="#1-安装Apache服务" class="headerlink" title="1.安装Apache服务"></a>1.安装Apache服务</h3><p>可以先更新一下服务器<br><code>sudo apt-get update             # 获取最新资源包</code><br> <code>sudo apt-get upgrade           # 本机软件全部更新</code><br> <code>sudo apt-get dist-upgrade    # 本机系统软件更新</code><br>安装Apache<br><code>sudo apt install apache2 -y</code><br>开启、关闭和重启服务器<br><code>/etc/init.d/apache2 start</code><br><code>/etc/init.d/apache2 stop</code><br><code>/etc/init.d/apache2 restart</code><br>检查是否开启Apache，一般安装完会默认开启。<br><code>systemctl status apache2</code><br><img src="https://img-blog.csdnimg.cn/20190202132408693.jpg" alt="在这里插入图片描述"><br>正常情况下，这个时候，我们使用自己的电脑用浏览器打开服务器主页应该会有apache的界面。但是，阿里云(或者国内的云服务器)不会默认打开80端口，我们知道80端口是http服务端口，80端口一旦关闭，我们就不能正常使用http服务，因此，接下来，我就讲讲怎么打开80端口。</p><h3 id="2-打开80端口"><a href="#2-打开80端口" class="headerlink" title="2.打开80端口"></a>2.打开80端口</h3><p>首先进入阿里云的云服务器管理控制台，找到我们安装了apache服务的云服务器，然后点击红色框框住的部分。<br><img src="https://img-blog.csdnimg.cn/20190202132942505.png" alt="在这里插入图片描述"><br>接着点击右上角<img src="https://img-blog.csdnimg.cn/20190202133108396.jpg" alt="在这里插入图片描述"><br>然后按照我贴的图片进行设置</p><p><img src="https://img-blog.csdnimg.cn/20190202133205787.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里设置完毕后，重启一下实例，我们就能打开主页了。<img src="https://img-blog.csdnimg.cn/20190202133317255.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 研究 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>WXpython做基于TCP协议的聊天窗体程序</title>
      <link href="/20190309/wxpython-makes-a-chat-form-program-based-on-tcp-protocol.html"/>
      <url>/20190309/wxpython-makes-a-chat-form-program-based-on-tcp-protocol.html</url>
      
        <content type="html"><![CDATA[<p> wxPython是Python语言的一套优秀的GUI图形库，允许Python程序员很方便的创建完整的、功能键全的GUI用户界面。 wxPython是作为优秀的跨平台GUI库wxWidgets的Python封装和Python模块的方式提供给用户的。<br>就如同Python和wxWidgets一样，wxPython也是一款开源软件，并且具有非常优秀的跨平台能力，能够支持运行在32 位 /64位windows、绝大多数的Unix或类Unix系统、Macintosh OS X下。<br>wxPython是Python编程语言的一个GUI工具箱。他使得Python程序员能够轻松的创建具有健壮、功能强大的图形用户界面的程序。它是Python语言对流行的wxWidgets跨平台GUI工具库的绑定。而wxWidgets是用C++语言写成的。<br>wxPython是跨平台的。这意味着同一个程序可以不经修改地在多种平台上运行。现今支持的平台有：32/64位微软Windows操作系统、大多数Unix或类Unix系统、苹果Mac OS X。<br>由于使用Python作为编程语言，wxPython编写简单、易于理解<br><strong>这里必看！！！！！必看！！！！！必看！！！！！我对程序的解释：基于tcp写的，是面向连接的、可靠地。所以要先执行服务端设置通信端口，就像斗地主，要有一个人先建，然后等待着服务端的连接后，在服务端的登录界面设置好昵称、填写正确端口（与服务端设置的端口一致），接着双方才能进入连天界面进行聊天，就能在电脑上模拟服务端和客户端进行通信了。当然在同一个局域网内的几台电脑之间也能通讯（这里的几台是通过设置服务端中的listen的个数来控制的），只不过是修改一个服务端连接的IP地址罢了（服务端、客户端在同一台电脑上的情况时，两边都写的是127.0.0.1，在不同的几台电脑上时，客户端要连接服务端的电脑的ip地址，而服务端不用改）</strong></p><h2 id="1、wxpython的安装配置"><a href="#1、wxpython的安装配置" class="headerlink" title="1、wxpython的安装配置"></a>1、wxpython的安装配置</h2><h3 id="1、下载wxpython"><a href="#1、下载wxpython" class="headerlink" title="1、下载wxpython"></a>1、下载wxpython</h3><p>在windows下使用管理员身份进入powershell,然后输入命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wxpython</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181209211300216.png" alt="在这里插入图片描述"><br>wxpython现在有两个版本：2.0+与3.0+,wxpython2.0是针对python2,而wxpython 3.0+是针对python3。而以上命令是安装wxpython最新版的。</p><h3 id="2、安装wxFormBuilder"><a href="#2、安装wxFormBuilder" class="headerlink" title="2、安装wxFormBuilder"></a>2、安装wxFormBuilder</h3><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d4Rm9ybUJ1aWxkZXIvd3hGb3JtQnVpbGRlci9yZWxlYXNlcw==" title="https://github.com/wxFormBuilder/wxFormBuilder/releases">https://github.com/wxFormBuilder/wxFormBuilder/releases<i class="fa fa-external-link"></i></span><br>下载最新版本的就行了。<br>wxFormBuilder的使用教程可以参考这个博客：<span class="exturl" data-url="aHR0cDovL2Jsb2cuNTFjdG8uY29tL3l1eW9uZ2lkLzE3MTc1MTQ=" title="http://blog.51cto.com/yuyongid/1717514">http://blog.51cto.com/yuyongid/1717514<i class="fa fa-external-link"></i></span></p><h2 id="2、开始制作窗体界面"><a href="#2、开始制作窗体界面" class="headerlink" title="2、开始制作窗体界面"></a>2、开始制作窗体界面</h2><p>我写的界面很简单，有兴趣的可以写更美观的界面<br><img src="https://img-blog.csdnimg.cn/20181209212435862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意要给输入框以及button设置名字，然后给button绑定两个事件。<br><img src="https://img-blog.csdnimg.cn/20181209212614385.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20181209212628159.png" alt="在这里插入图片描述"><br>然后建立第二个界面：<br><img src="https://img-blog.csdnimg.cn/20181209212715591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意的是我在图中表明的地方<br><img src="https://img-blog.csdnimg.cn/20181209212803496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这个是用的textcrtl,然后按照图片中的内容进行设置。</p><p>然后生成代码：<br><img src="https://img-blog.csdnimg.cn/20181209213147535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图中1的地方选择我们写的聊天程序的python代码的路径，2要明文件的名字，3选择生成哪种语言的代码。<br><strong>记得设置名字</strong></p><p><img src="https://img-blog.csdnimg.cn/20181209214147564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这3个地方要设置名字。<br><strong>记得添加事件</strong><br><img src="https://img-blog.csdnimg.cn/20181209213623157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个一定要设置成OnTextEnter事件，不然就没有输入完成按enter键发送信息的功能。<br>然后给发送按钮添加一个发送点击事件。<br>所有的界面设置完成后，然后按F8生成代码。</p><h2 id="3、使用python代码完善功能"><a href="#3、使用python代码完善功能" class="headerlink" title="3、使用python代码完善功能"></a>3、使用python代码完善功能</h2><p>我使用的是eclipse编写的python代码， 如果想要和我一样使用eclipse编写python代码的，具体实现步骤请百度。<br>进入eclipse后，先按F5刷新一下，然后就能得到在wxFormBuilder生成的代码<br><img src="https://img-blog.csdnimg.cn/20181209215145624.png" alt="在这里插入图片描述"><br>然后我们新建一个TcpClient的module,然后建立两个类去继承我们在wxFormBuilder生成的代码中的类。<br><img src="https://img-blog.csdnimg.cn/20181209215850462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20181209215904579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后根据python的类的继承，把父类的方法实例化。<br>我可能说的不清楚，大家可以参考这个博客：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoYW5vdXJzL2FydGljbGUvZGV0YWlscy84Mzc4OTA0Nw==" title="https://blog.csdn.net/Thanours/article/details/83789047">https://blog.csdn.net/Thanours/article/details/83789047<i class="fa fa-external-link"></i></span><br>关于python的socket的编程，有不懂的可以查看廖雪峰的官方网站中的python部分进行学习。<br>我认为说一大堆废话，不如看着一个具体的代码进行研究学习。<br>代码我上传在我的github上，有需要的可以下载研究，大家共同研究进步。</p><p>github地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0J1ZGV4aW5nL1B5dGhvbi0vdHJlZS9tYXN0ZXIvd3hweXRob24=" title="https://github.com/Budexing/Python-/tree/master/wxpython">https://github.com/Budexing/Python-/tree/master/wxpython<i class="fa fa-external-link"></i></span><br>码字不易，请大家多多点赞，谢谢！！！</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>windows下破解Eclipse-DS-5</title>
      <link href="/20190309/crack-eclipseds5-under-windows.html"/>
      <url>/20190309/crack-eclipseds5-under-windows.html</url>
      
        <content type="html"><![CDATA[<p>软件的破解包下载地址：<br>链接：<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUtuQlROakxGb3phZUtFLXB5c053VFE=" title="https://pan.baidu.com/s/1KnBTNjLFozaeKE-pysNwTQ">https://pan.baidu.com/s/1KnBTNjLFozaeKE-pysNwTQ<i class="fa fa-external-link"></i></span>   提取码：4o4m<br>至于软件，百度一大堆。<br>下载压缩包后，先安装软件，安装软件最好选择容易记住的路径，好方便我们后续的操作。</p><h2 id="进行软件的破解"><a href="#进行软件的破解" class="headerlink" title="进行软件的破解"></a>进行软件的破解</h2><p>使用管理员身份运行cmd 进入解压后的那个crack文件下。</p><h3 id="一定要管理员身份"><a href="#一定要管理员身份" class="headerlink" title="一定要管理员身份"></a>一定要管理员身份</h3><p> <img src="https://img-blog.csdnimg.cn/20181223174043358.png" alt="在这里插入图片描述"><br> 同时也请打开crack文件下的txt文件，后续的操作对照着文件中的步骤操作。<br> <img src="https://img-blog.csdnimg.cn/20181223174108895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20181223174136761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20181223174251845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>红色框住部分为软件安装路径（这只是我的安装路径，具体要看你安装在你的电脑哪个地方）接着就输入step b的命令patcher.exe –license=ARM_DS_5 “d:\DS”（你的软件装在哪儿，双引号中就填写其路径），这步完成后就会在软件安装目录下生成一个license key.dat文件。<br>接着打开软件，软件就会提示你添加license key，点击add license key，然后选择License Type为第一个选项。<br><img src="https://img-blog.csdnimg.cn/20181223174427503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后选择第二项，</p><p><img src="https://img-blog.csdnimg.cn/20181223174559446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接着找到DS-5的安装目录中的license key.dat.<br><img src="https://img-blog.csdnimg.cn/20181223174717550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后一步不能忘记，要选择toolkit,不然就破解无效。<br><img src="https://img-blog.csdnimg.cn/20181223174747772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmczMzc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里选择后，点击close，然后软件就会提示restart eclipse,点击重启后，软件破解成功。</p>]]></content>
      
      
      <categories>
          
          <category> 软件破解 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
